diff -r 34cd59b7ccbe py-bindings/bindings_generator.py.in
--- ompl/py-bindings/bindings_generator.py.in	Wed Mar 01 10:06:54 2017 -0600
+++ ompl/py-bindings/bindings_generator.py.in	Mon Mar 06 16:35:23 2017 -0600
@@ -39,12 +39,15 @@
 # coding: utf-8
 
 import logging
+import time
 from os.path import exists, join, isdir
 from os import getenv
 import subprocess
 from sys import platform
 from pygccxml import declarations, parser
 from pygccxml.utils import xml_generator
+from pygccxml.utils import loggers as pygccxml_loggers
+from pyplusplus._logging_ import loggers as pyplusplus_loggers
 from pyplusplus import module_builder, messages
 from pyplusplus.module_builder import call_policies
 from pyplusplus.decl_wrappers import print_declarations
@@ -108,6 +111,21 @@
     c = decl.return_type.decl_string[-1]
     return c=='&' or c=='*'
 
+class msgFilter(logging.Filter):
+    def __init__(self):
+        self.start = time.time()
+        self.time = self.start
+    def filter(self, record):
+        if 'execution - done' not in record.msg:
+            return False
+        t = time.time()
+        if t - self.time > 60:
+            self.time = t
+            record.msg = 'still alive after %g seconds!' % (t - self.start)
+            return True
+        else:
+            return False
+
 class code_generator_t(object):
     """The base class code generator."""
 
@@ -115,7 +133,12 @@
         """Constructor.
         @name name of the python module
         @dep name of another module this module depends on"""
-        module_builder.set_logger_level( logging.INFO )
+        # make binding generation more verbose to show build bots that the
+        # build is not stuck, but not *too* verbose:
+        for loggers in [pyplusplus_loggers.all, pygccxml_loggers.all_loggers]:
+            for logger in loggers:
+                logger.setLevel( logging.DEBUG )
+                logger.addFilter(msgFilter())
         xml_generator_config = parser.load_xml_generator_configuration("@CASTXMLCONFIGPATH@")
         self.mb = module_builder.module_builder_t(
             files = [ 'bindings/' + name + '.h' ],
